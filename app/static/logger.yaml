# using a YAML File for configuring `loggers`
# https://gist.github.com/kingspp/9451566a5555fb022215ca2b7b802f19

version : 1
disable_existing_loggers : false # https://docs.python.org/3/library/logging.config.html

formatters :

  standard :
    format : "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

  error :
    format : "%(levelname)s <PID %(process)d:%(processName)s> %(name)s.%(funcName)s(): %(message)s"

handlers : # https://docs.python.org/3/library/logging.handlers.html#module-logging.handlers

  console : # standard, print(s) in console
    class     : logging.StreamHandler # equivalent to `from logging import StreamHandler`
    level     : DEBUG
    formatter : standard # name of the formmater, as specified above'
    stream    : ext://sys.stdout

  infoHandler :
    class       : logging.handlers.RotatingFileHandler
    level       : INFO
    formatter   : standard
    filename    : /tmp/info.log
    maxBytes    : 10485760 # 10MB
    backupCount : 20
    encoding    : utf8

  errorHandler :
    class       : logging.handlers.RotatingFileHandler
    level       : ERROR
    formatter   : error
    filename    : /tmp/error.log
    maxBytes    : 10485760 # 10MB
    backupCount : 20
    encoding    : utf8

  debugHandler :
    class       : logging.handlers.RotatingFileHandler
    level       : DEBUG
    formatter   : standard
    filename    : /tmp/debug.log
    maxBytes    : 10485760 # 10MB
    backupCount : 20
    encoding    : utf8

  criticalHandler :
    class       : logging.handlers.RotatingFileHandler
    level       : CRITICAL
    formatter   : standard
    filename    : /tmp/critical.log
    maxBytes    : 10485760 # 10MB
    backupCount : 20
    encoding    : utf8

  warnHandler :
    class       : logging.handlers.RotatingFileHandler
    level       : WARNING
    formatter   : standard
    filename    : /tmp/warn.log
    maxBytes    : 10485760 # 10MB
    backupCount : 20
    encoding    : utf8

root : # root logger, access by logging.getLogger(__name__)

  level     : NOTSET
  handlers  : [console]
  propogate : yes

loggers : # all other user defined loggers

  infoLogger :
    level     : INFO
    handlers  : [console, infoHandler]
    propogate : no

  errorLogger :
    level     : ERROR
    handlers  : [console, errorHandler]
    propogate : no

  debugLogger :
    level     : DEBUG
    handlers  : [console, debugHandler]
    propogate : no

  criticalLogger :
    level     : CRITICAL
    handlers  : [console,criticalHandler]
    propogate : no

  warnLogger :
    level     : WARNING
    handlers  : [console, warnHandler]
    propogate : no
